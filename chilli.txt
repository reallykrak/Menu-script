-- Kütüphaneyi Yükle
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

-- Pencere Oluştur
local Window = OrionLib:MakeWindow({Name = "Fly Menu by reallykrak & Kayra", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- Ana Sekmeyi Oluştur
local MainTab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--------------------------------------------------------------------------------
-- Uçuş Ayarları Bölümü
--------------------------------------------------------------------------------
local FlySection = MainTab:AddSection({
	Name = "Fly Ayarları"
})

local speeds = 1
local nowe = false
local tpwalking = false
local flyEnabled = false

local function updateFlyState()
    local speaker = game:GetService("Players").LocalPlayer
    local chr = speaker.Character
    if not chr then return end
    local hum = chr:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    [cite_start]if flyEnabled then [cite: 1]
        [cite_start]nowe = true [cite: 2]
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "reallykrak & Kayra",
            Text = "Fly AÇIK!",
            Duration = 3
        [cite_start]}) [cite: 2]

        for i, v in next, hum:GetPlayingAnimationTracks() do
            [cite_start]v:AdjustSpeed(0) [cite: 2]
        [cite_start]end [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Flying, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Landed, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Physics, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false) [cite: 3]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Running, false) [cite: 4]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, false) [cite: 4]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false) [cite: 4]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, false) [cite: 4]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Swimming, false) [cite: 4]
        [cite_start]hum:ChangeState(Enum.HumanoidStateType.Swimming) [cite: 4]

        for i = 1, speeds do
            spawn(function()
                [cite_start]local hb = game:GetService("RunService").Heartbeat [cite: 4]
                [cite_start]tpwalking = true [cite: 5]
                [cite_start]while tpwalking and hb:Wait() and chr and hum and hum.Parent do [cite: 5]
                    [cite_start]if hum.MoveDirection.Magnitude > 0 then [cite: 5]
                        [cite_start]chr:TranslateBy(hum.MoveDirection * speeds) [cite: 5]
                    [cite_start]end [cite: 6]
                end
            end)
        end

        [cite_start]local bodyPart = chr:FindFirstChild("UpperTorso") or chr:FindFirstChild("Torso") [cite: 6]
        [cite_start]if not bodyPart then return end [cite: 6]

        [cite_start]local bg = Instance.new("BodyGyro", bodyPart) [cite: 6]
        [cite_start]bg.P = 9e4 [cite: 6]
        [cite_start]bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) [cite: 6]
        [cite_start]bg.cframe = bodyPart.CFrame [cite: 7]
        [cite_start]local bv = Instance.new("BodyVelocity", bodyPart) [cite: 7]
        [cite_start]bv.velocity = Vector3.new(0, 0.1, 0) [cite: 7]
        [cite_start]bv.maxForce = Vector3.new(9e9, 9e9, 9e9) [cite: 7]
        [cite_start]hum.PlatformStand = true [cite: 7]

        spawn(function()
            while flyEnabled and chr and hum and hum.Health > 0 do
                [cite_start]game:GetService("RunService").RenderStepped:Wait() [cite: 8]
                [cite_start]bv.velocity = (game.Workspace.CurrentCamera.CoordinateFrame.lookVector * speeds) [cite: 8]
                [cite_start]bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame [cite: 8]
            end
            [cite_start]bg:Destroy() [cite: 8]
            [cite_start]bv:Destroy() [cite: 8]
            [cite_start]hum.PlatformStand = false [cite: 8]
        end)

    [cite_start]else [cite: 9]
        [cite_start]nowe = false [cite: 9]
        [cite_start]tpwalking = false [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Flying, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Landed, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Physics, true) [cite: 9]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Running, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, true) [cite: 10]
        [cite_start]hum:SetStateEnabled(Enum.HumanoidStateType.Swimming, true) [cite: 10]
        [cite_start]hum:ChangeState(Enum.HumanoidStateType.RunningNoPhysics) [cite: 10]
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "reallykrak & Kayra",
            [cite_start]Text = "Fly KAPALI!", [cite: 11]
            Duration = 3
        [cite_start]}) [cite: 11]
    end
end

MainTab:AddToggle({
	Name = "Fly'ı Aktif Et",
	Callback = function(Value)
		flyEnabled = Value
		updateFlyState()
	end    
})

MainTab:AddSlider({
	Name = "Uçuş Hızı",
	Min = 1,
	Max = 100,
	Default = 1,
	Color = Color3.fromRGB(255,85,0),
	Increment = 1,
	ValueName = "Hız",
	Callback = function(Value)
		speeds = Value
		OrionLib:MakeNotification({
			Name = "Hız Değişti!",
			Content = "Yeni uçuş hızı: " .. tostring(speeds),
			Image = "rbxassetid://4483345998",
			Time = 5
		})
	end
})

--------------------------------------------------------------------------------
-- Karakter Ayarları Bölümü (YENİ EKLENEN)
--------------------------------------------------------------------------------
local CharacterSection = MainTab:AddSection({
	Name = "Karakter Ayarları"
})

-- Speed Slider
CharacterSection:AddSlider({
	Name = "Speed",
	Min = 16,
	Max = 500,
	Default = 16,
	Color = Color3.fromRGB(0, 255, 0),
	Increment = 1,
	ValueName = "Hız",
	Callback = function(Value)
		local player = game:GetService("Players").LocalPlayer
		if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
			player.Character.Humanoid.WalkSpeed = Value
		end
	end
})

-- Jump Boost Slider
CharacterSection:AddSlider({
	Name = "Jump Boost",
	Min = 50,
	Max = 500,
	Default = 50,
	Color = Color3.fromRGB(0, 170, 255),
	Increment = 1,
	ValueName = "Güç",
	Callback = function(Value)
		local player = game:GetService("Players").LocalPlayer
		if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
			player.Character.Humanoid.JumpPower = Value
		end
	end
})

-- Infinite Jump Toggle
local infiniteJumpEnabled = false
local UserInputService = game:GetService("UserInputService")

UserInputService.JumpRequest:Connect(function()
    if infiniteJumpEnabled then
        local player = game:GetService("Players").LocalPlayer
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
            player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

CharacterSection:AddToggle({
	Name = "Infinite Jump",
	Callback = function(Value)
		infiniteJumpEnabled = Value
		if Value then
			OrionLib:MakeNotification({
				Name = "Infinite Jump",
				Content = "Infinite Jump Aktif!",
				Image = "rbxassetid://4483345998",
				Time = 3
			})
		else
			OrionLib:MakeNotification({
				Name = "Infinite Jump",
				Content = "Infinite Jump Devre Dışı!",
				Image = "rbxassetid://4483345998",
				Time = 3
			})
		end
	end    
})


--------------------------------------------------------------------------------
-- Script'i Başlat ve Karakter Olaylarını Yönet
--------------------------------------------------------------------------------

OrionLib:Init()

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
    wait(1)
    if flyEnabled then
        [cite_start]local hum = char:FindFirstChildOfClass("Humanoid") [cite: 12]
        [cite_start]if hum then [cite: 12]
            [cite_start]hum.PlatformStand = false [cite: 12]
        [cite_start]end [cite: 12]
        -- Karakter yeniden doğduğunda uçuş aktifse tekrar uygula
        updateFlyState()
    end
end)