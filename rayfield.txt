--==============================================================================
-- 1. ADIM: RAYFIELD KÜTÜPHANESİNİ YÜKLE
-- Bu satır, her zaman en başta olmalıdır.
--==============================================================================
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

--==============================================================================
-- TEMEL DEĞİŞKENLER VE AYARLAR
--==============================================================================
local player = game:GetService("Players").LocalPlayer
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

local Toggles = {
    ESP = false,
    Fly = false
}
local Connections = {} -- Tüm bağlantıları burada saklayarak kolayca yönetebiliriz

--==============================================================================
-- RAYFIELD MENÜSÜNÜ OLUŞTUR
--==============================================================================

local Window = Rayfield:CreateWindow({
    Name = "Stark's Command Center",
    LoadingTitle = "Protokoller Yükleniyor...",
    LoadingSubtitle = "Stark Tarafından",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "StarkConfig",
        FileName = "V2"
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

--==============================================================================
-- MAIN SEKMESİ (UÇMA VE HAREKET)
--==============================================================================

local MainTab = Window:CreateTab("Main", 4483362458)

-- === FLY BÖLÜMÜ ===
local FlySection = MainTab:CreateSection("Uçuş Kontrolleri")

local fly_speed = 50 -- Orijinal koddaki maxspeed değeri
local fly_bv, fly_bg
local originalFlyLogicActive = false
local characterRigType = nil

local FlyToggle = MainTab:CreateToggle({
    Name = "Kusursuz Uçuş Modu",
    Callback = function(state)
        Toggles.Fly = state
        local char = player.Character
        if not char then return end

        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end

        characterRigType = humanoid.RigType

        if Toggles.Fly then
            -- Orijinal koddaki uçuş mantığını başlat
            originalFlyLogicActive = true
            
            local targetPart = (characterRigType == Enum.HumanoidRigType.R15 and char:FindFirstChild("UpperTorso")) or char:FindFirstChild("Torso")
            if not targetPart then return end

            fly_bg = Instance.new("BodyGyro", targetPart)
            fly_bg.P = 9e4
            fly_bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            fly_bg.cframe = targetPart.CFrame

            fly_bv = Instance.new("BodyVelocity", targetPart)
            fly_bv.velocity = Vector3.new(0, 0.1, 0)
            fly_bv.maxForce = Vector3.new(9e9, 9e9, 9e9)

            humanoid.PlatformStand = true
            
            -- Sürekli çalışan döngüyü başlat
            if Connections.FlyLoop then Connections.FlyLoop:Disconnect() end
            Connections.FlyLoop = RunService.RenderStepped:Connect(function()
                if not originalFlyLogicActive then return end
                
                local ctrl = {f = 0, b = 0, l = 0, r = 0}
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then ctrl.f = 1 end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then ctrl.b = -1 end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then ctrl.l = -1 end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then ctrl.r = 1 end
                
                local speedMultiplier = fly_speed / 50 -- Slider'dan gelen değere göre hızı ayarla
                
                local current_speed = 0
                if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
                    current_speed = fly_speed
                else
                    current_speed = 0
                end

                if fly_bv and fly_bv.Parent then
                    fly_bv.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * current_speed * speedMultiplier
                end

                if fly_bg and fly_bg.Parent then
                    fly_bg.cframe = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speedMultiplier),0,0)
                end
            end)

        else
            -- Uçuşu durdur
            originalFlyLogicActive = false
            if Connections.FlyLoop then Connections.FlyLoop:Disconnect() Connections.FlyLoop = nil end
            if fly_bg then fly_bg:Destroy() end
            if fly_bv then fly_bv:Destroy() end
            if humanoid then humanoid.PlatformStand = false end
        end
    end
})

local SpeedSlider = MainTab:CreateSlider({
    Name = "Uçuş Hızı",
    Range = {10, 500},
    Increment = 10,
    Suffix = " Hız",
    Default = 50,
    Callback = function(value)
        fly_speed = value
    end
})

-- === DİĞER HAREKET BÖLÜMÜ ===
local MovementSection = MainTab:CreateSection("Diğer Hareket Yetenekleri")

local originalWalkSpeed = 16
local originalJumpPower = 50

-- Karakter eklendiğinde orijinal değerleri kaydet
player.CharacterAdded:Connect(function(char)
    local humanoid = char:WaitForChild("Humanoid")
    originalWalkSpeed = humanoid.WalkSpeed
    originalJumpPower = humanoid.JumpPower
end)

MovementSection:CreateToggle({
    Name = "Sınırsız Zıplama",
    Callback = function(state)
        if state then
            Connections.InfiniteJump = UserInputService.JumpRequest:Connect(function()
                if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                    player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        else
            if Connections.InfiniteJump then
                Connections.InfiniteJump:Disconnect()
                Connections.InfiniteJump = nil
            end
        end
    end
})

local jumpPowerValue = 150
MovementSection:CreateToggle({
    Name = "Jump Power",
    Callback = function(state)
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end
        if state then
            humanoid.JumpPower = jumpPowerValue
        else
            humanoid.JumpPower = originalJumpPower
        end
    end
})

MovementSection:CreateSlider({
    Name = "Zıplama Gücü Değeri",
    Range = {50, 500},
    Increment = 10,
    Suffix = " Güç",
    Default = 150,
    Callback = function(value)
        jumpPowerValue = value
        -- Eğer toggle açıksa anında güncelle
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.JumpPower ~= originalJumpPower then
             player.Character.Humanoid.JumpPower = value
        end
    end,
})

local walkSpeedValue = 100
MovementSection:CreateToggle({
    Name = "WalkSpeed",
    Callback = function(state)
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end
        if state then
            humanoid.WalkSpeed = walkSpeedValue
        else
            humanoid.WalkSpeed = originalWalkSpeed
        end
    end
})

MovementSection:CreateSlider({
    Name = "Yürüme Hızı Değeri",
    Range = {16, 300},
    Increment = 5,
    Suffix = " Hız",
    Default = 100,
    Callback = function(value)
        walkSpeedValue = value
        if player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.WalkSpeed ~= originalWalkSpeed then
             player.Character.Humanoid.WalkSpeed = value
        end
    end,
})

--==============================================================================
-- ESP SEKMESİ (GÖRSEL DESTEK)
--==============================================================================

local ESPTab = Window:CreateTab("ESP", 4483362458)
local ESPSection = ESPTab:CreateSection("Oyuncu ESP Ayarları")

local ESPConfig = {
    Box = true,
    Name = true,
    Distance = true
}

-- ESP Ana Toggle
ESPTab:CreateToggle({
    Name = "ESP'yi Aktif Et",
    Callback = function(state)
        Toggles.ESP = state
    end
})

-- ESP Özelliklerini açıp kapatma
ESPSection:CreateToggle({
    Name = "Kutu ESP",
    Default = true,
    Callback = function(state) ESPConfig.Box = state end
})
ESPSection:CreateToggle({
    Name = "İsim ESP",
    Default = true,
    Callback = function(state) ESPConfig.Name = state end
})
ESPSection:CreateToggle({
    Name = "Mesafe ESP",
    Default = true,
    Callback = function(state) ESPConfig.Distance = state end
})

-- ESP oluşturma ve güncelleme mantığı
local function updateESP()
    -- Önce eski ESP'leri temizle
    for _, espElement in pairs(CollectionService:GetTagged("StarkESP")) do
        espElement:Destroy()
    end

    if not Toggles.ESP then return end

    for _, otherPlayer in pairs(game:GetService("Players"):GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            local char = otherPlayer.Character
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            local head = char:FindFirstChild("Head")

            if humanoid and humanoid.Health > 0 and head then
                local billboardGui = Instance.new("BillboardGui")
                billboardGui.Name = "ESP_GUI"
                billboardGui.Adornee = head
                billboardGui.AlwaysOnTop = true
                billboardGui.Size = UDim2.new(4, 0, 4, 0)
                billboardGui.StudsOffset = Vector3.new(0, 2, 0)
                billboardGui.Parent = game.CoreGui
                CollectionService:AddTag(billboardGui, "StarkESP") -- Kolay temizlik için etiketle

                if ESPConfig.Box then
                    local espBox = Instance.new("Frame")
                    espBox.Parent = billboardGui
                    espBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    espBox.BackgroundTransparency = 1
                    espBox.BorderColor3 = otherPlayer.TeamColor.Color
                    espBox.BorderSizePixel = 2
                    espBox.Size = UDim2.new(1, 0, 1, 0)
                    espBox.Position = UDim2.new(-0.5, 0, -0.5, 0)
                end
                
                if ESPConfig.Name or ESPConfig.Distance then
                    local textLabel = Instance.new("TextLabel")
                    textLabel.Parent = billboardGui
                    textLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    textLabel.BackgroundTransparency = 0.4
                    textLabel.Size = UDim2.new(5, 0, 1, 0)
                    textLabel.Position = UDim2.new(-2.5, 0, -1.5, 0)
                    textLabel.Font = Enum.Font.SourceSans
                    textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                    textLabel.TextSize = 14
                    textLabel.TextScaled = true
                    
                    local textContent = {}
                    if ESPConfig.Name then table.insert(textContent, otherPlayer.Name) end
                    if ESPConfig.Distance and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (player.Character.HumanoidRootPart.Position - head.Position).Magnitude
                        table.insert(textContent, string.format("[%dM]", math.floor(distance)))
                    end
                    textLabel.Text = table.concat(textContent, " ")
                end
            end
        end
    end
end

-- RenderStepped ile ESP'yi sürekli güncelle
RunService.RenderStepped:Connect(updateESP)