local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/jensonhirst/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "Script Hub by reallykrak & Kayra", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

-- ===================================================================================
-- ANA SEKMELER
-- ===================================================================================

local MainTab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- ===================================================================================
-- HIZ VE DİĞER ARAÇLAR
-- ===================================================================================

local SpeedSection = MainTab:AddSection({
	Name = "Movement"
})

local player = game:GetService("Players").LocalPlayer
local walkSpeed = 16

SpeedSection:AddSlider({
	Name = "Walk Speed",
	Min = 16,
	Max = 200,
	Default = 16,
	Color = Color3.fromRGB(255,85,0),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		walkSpeed = Value
		if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
			player.Character.Humanoid.WalkSpeed = Value
		end
	end
})

local infiniteJumpEnabled = false
SpeedSection:AddToggle({
    Name = "Infinite Jump",
    Default = false,
    Callback = function(Value)
        infiniteJumpEnabled = Value
        if infiniteJumpEnabled then
            game:GetService("UserInputService").JumpRequest:Connect(function()
                if infiniteJumpEnabled and player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                    player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        end
    end
})


MainTab:AddButton({
	Name = "Infinite Yield",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end
})


-- ===================================================================================
-- UÇMA MENÜSÜ
-- ===================================================================================

local FlySection = MainTab:AddSection({
	Name = "Fly Settings"
})

local speeds = 1
local flyEnabled = false

local function updateFlyState()
    local speaker = game:GetService("Players").LocalPlayer
    local chr = speaker.Character
    if not chr then return end
    local hum = chr:FindFirstChildOfClass("Humanoid")
    if not hum then return end

    if flyEnabled then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "reallykrak & Kayra",
            Text = "Fly ON!",
            Duration = 3
        })

        hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Landed, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Running, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, false)
        hum:SetStateEnabled(Enum.HumanoidStateType.Swimming, false)
        hum:ChangeState(Enum.HumanoidStateType.Swimming)

        local bodyPart = chr:FindFirstChild("UpperTorso") or chr:FindFirstChild("Torso")
        if not bodyPart then return end

        local bg = Instance.new("BodyGyro", bodyPart)
        bg.Name = "FlyGyro"
        bg.P = 9e4
        bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bg.cframe = bodyPart.CFrame
        local bv = Instance.new("BodyVelocity", bodyPart)
        bv.Name = "FlyVelocity"
        bv.velocity = Vector3.new(0, 0.1, 0)
        bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
        hum.PlatformStand = true

        spawn(function()
            while flyEnabled and chr and hum and hum.Health > 0 do
                game:GetService("RunService").RenderStepped:Wait()
                bv.velocity = (game.Workspace.CurrentCamera.CoordinateFrame.lookVector * speeds)
                bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame
            end
            bg:Destroy()
            bv:Destroy()
            hum.PlatformStand = false
        end)

    else
        for _, part in pairs(chr:GetChildren()) do
            if part:IsA("BasePart") then
                local gyro = part:FindFirstChild("FlyGyro")
                local velocity = part:FindFirstChild("FlyVelocity")
                if gyro then gyro:Destroy() end
                if velocity then velocity:Destroy() end
            end
        end
        hum.PlatformStand = false
        hum:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Landed, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Running, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, true)
        hum:SetStateEnabled(Enum.HumanoidStateType.Swimming, true)
        hum:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "reallykrak & Kayra",
            Text = "Fly OFF!",
            Duration = 3
        })
    end
end

FlySection:AddToggle({
	Name = "Enable Fly",
	Callback = function(Value)
		flyEnabled = Value
		updateFlyState()
	end    
})

FlySection:AddSlider({
	Name = "Fly Speed",
	Min = 1,
	Max = 100,
	Default = 1,
	Color = Color3.fromRGB(255,85,0),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		speeds = Value
		OrionLib:MakeNotification({
			Name = "Speed Changed!",
			Content = "New fly speed: " .. tostring(speeds),
			Image = "rbxassetid://4483345998",
			Time = 5
		})
	end
})


local clockLabel = MainTab:AddLabel("Time: Loading...")

spawn(function()
    while wait(1) do
        clockLabel:Set("Time: " .. os.date("%H:%M:%S"))
    end
end)

MainTab:AddLabel("made by reallykrak")


-- ===================================================================================
-- AIMBOT BÖLÜMÜ
-- ===================================================================================

local AimbotSection = AimbotTab:AddSection({
    Name = "Aimbot Settings"
})

local aimbotEnabled = false
local fov = 100
local showFovCircle = false
local selectedHitbox = "Head"
local aimbotSensitivity = 10

local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Radius = fov
fovCircle.Color = Color3.fromRGB(255, 255, 255)
fovCircle.Thickness = 1
fovCircle.Filled = false
fovCircle.Position = Vector2.new(game.Workspace.CurrentCamera.ViewportSize.X / 2, game.Workspace.CurrentCamera.ViewportSize.Y / 2)


AimbotSection:AddToggle({
    Name = "Enable Aimbot",
    Default = false,
    Callback = function(Value)
        aimbotEnabled = Value
    end
})

AimbotSection:AddSlider({
    Name = "FOV",
    Min = 10,
    Max = 500,
    Default = 100,
    Color = Color3.fromRGB(255,85,0),
    Increment = 1,
    ValueName = "FOV",
    Callback = function(Value)
        fov = Value
        fovCircle.Radius = Value
    end
})

AimbotSection:AddToggle({
    Name = "Show FOV Circle",
    Default = false,
    Callback = function(Value)
        showFovCircle = Value
        fovCircle.Visible = Value
    end
})

AimbotSection:AddDropdown({
    Name = "Hitbox",
    Default = "Head",
    Options = {"Head", "Torso", "HumanoidRootPart"},
    Callback = function(Value)
        selectedHitbox = Value
    end
})

AimbotSection:AddSlider({
    Name = "Aimbot Sensitivity",
    Min = 1,
    Max = 50,
    Default = 10,
    Color = Color3.fromRGB(0, 170, 255),
    Increment = 1,
    ValueName = "Sensitivity",
    Callback = function(Value)
        aimbotSensitivity = Value
    end
})

local function getClosestPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local localPlayer = game:GetService("Players").LocalPlayer
    local mousePos = game:GetService("UserInputService"):GetMouseLocation()

    for _, otherPlayer in pairs(game:GetService("Players"):GetPlayers()) do
        if otherPlayer ~= localPlayer and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") and otherPlayer.Character.Humanoid.Health > 0 then
            local targetPart = otherPlayer.Character:FindFirstChild(selectedHitbox)
            if targetPart then
                local screenPos, onScreen = game.Workspace.CurrentCamera:WorldToScreenPoint(targetPart.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    if distance < shortestDistance and distance < fov then
                        shortestDistance = distance
                        closestPlayer = otherPlayer
                    end
                end
            end
        end
    end
    return closestPlayer
end

game:GetService("RunService").RenderStepped:Connect(function()
    if showFovCircle then
        fovCircle.Position = Vector2.new(game.Workspace.CurrentCamera.ViewportSize.X / 2, game.Workspace.CurrentCamera.ViewportSize.Y / 2)
    end
    
    if aimbotEnabled and game:GetService("UserInputService"):IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        local targetPlayer = getClosestPlayer()
        if targetPlayer then
            local targetPart = targetPlayer.Character:FindFirstChild(selectedHitbox)
            if targetPart then
                local targetCFrame = CFrame.new(game.Workspace.CurrentCamera.CFrame.Position, targetPart.Position)
                game.Workspace.CurrentCamera.CFrame = game.Workspace.CurrentCamera.CFrame:Lerp(targetCFrame, 1 / aimbotSensitivity)
            end
        end
    end
end)


-- ===================================================================================
-- SCRIPT BAŞLATMA VE YENİDEN DOĞMA YÖNETİMİ
-- ===================================================================================

OrionLib:Init()

game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
    wait(1)
    
    local hum = char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = walkSpeed
    end

    if flyEnabled then
        updateFlyState()
    end
end)